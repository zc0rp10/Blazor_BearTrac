@page "/ticket"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Tickets</h1>
<p class="mb-4">A list of all the tickets that exists in the database.</p>
@if (tickets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive-xl">
        <table class="table table-borderless">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Type</th>
                    <th scope="col">Application</th>
                    <th scope="col">Description</th>
                    <th scope="col">Status</th>
                    <th scope="col">Priority</th>
                    <th scope="col">Created</th>
                    <th class="text-right" scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in tickets)
                {
                    <tr>
                        <td scope="row"><span class="d-inline-block text-truncate" style="max-width: 200px;">@ticket.Name</span></td>
                        <TicketTypeTd Ticket="ticket"/>
                        <td>@ticket.Application</td>
                        <td><span class="d-inline-block text-truncate" style="max-width: 700px;">@ticket.Description</span></td>
                        <TicketStatusTd Status="ticket.Status"/>
                        <td>@ticket.Priority</td>
                        <td>@ticket.Date.ToString("yyyy-MM-dd")</td>
                        <td class="text-right">
                            <NavLink role="button" href=@("ticket/update/" + @ticket.Id)
                                class="oi oi-pencil btn btn-warning my-1"></NavLink>
                            <button @onclick=@(() => HandleDelete(ticket.Id)) class="oi oi-trash btn btn-danger"></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <a href="ticket/create" class="btn btn-primary">New Ticket</a>
    </div>
}

@code {
    private List<Ticket> tickets = new List<Ticket>();
    protected override async Task OnInitializedAsync()
    {
        tickets = await Http.GetFromJsonAsync<List<Ticket>>("https://zbooksapi.azurewebsites.net/api/tickets");
        tickets.OrderBy(ticket => ticket.Application);
    }

    async Task HandleDelete(string id)
    {
        try
        {
            await Http.DeleteAsync($"https://zbooksapi.azurewebsites.net/api/tickets/{id}");
            tickets.RemoveAll(item => item.Id == id);
        }
        catch (Exception ex)
        {
            System.Console.WriteLine(ex.Message);
        }
    }
}

@*
    // Bugtracker

    // Ticket //Ticket
    //Bug //Request *@